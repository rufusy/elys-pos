server.port: 8085

spring:
    security.oauth2.resourceserver.jwt:
        jwk-set-uri: http://keycloak:8080/realms/${app.auth-server-realm}/protocol/openid-connect/certs
    datasource:
        url: jdbc:postgresql://localhost:5433/inventory
        username: postgres
        password: '{cipher}a91d430dc17d196f28f5f1e1a4101ac157c412c7b0cdc0f915f65b50048e707e'
        hikari.initialization-fail-timeout: 60000
    jpa:
        hibernate.ddl-auto: create-drop
        show-sql: true
        properties:
            hibernate.format_sql: false

springdoc:
    swagger-ui.path: /v1/openapi/inventory/swagger-ui.html
    api-docs.path: /v1/openapi/inventory/v3/api-docs
    packages-to-scan: com.elys.pos.inventory;
    paths-to-match: /**
    cache.disabled: true
    swagger-ui:
        oauth2-redirect-url: /swagger-ui/oauth2-redirect.html
        oauth:
            clientId: writer
            clientSecret: dB44oX48KZyTURjtCZwJ0eA6sylNQkZe
            useBasicAuthenticationWithAccessCodeGrant: true
    oAuthFlow:
        authorizationUrl: http://localhost:8086/realms/${app.auth-server-realm}/protocol/openid-connect/auth
        tokenUrl: http://localhost:8086/realms/${app.auth-server-realm}/protocol/openid-connect/token

api:
    common:
        version: 1.0.0
        title: Elys POS API
        description: Description of the API...
        termsOfService: MY TERMS OF SERVICE
        license: MY LICENSE
        licenseUrl: MY LICENSE URL
        externalDocDesc: MY WIKI PAGE
        externalDocUrl: MY WIKI URL
        contact:
            name: NAME OF CONTACT
            url: URL TO CONTACT
            email: contact@mail.com
    responseCodes:
        ok.description: OK
        badRequest.description: Bad Request, invalid format of the request. See response message for more information
        notFound.description: Not found, the specified id does not exist
        unprocessableEntity.description: Unprocessable entity, input parameters caused the processing to fail. See response message for more information

---
spring.config.activate.on-profile: dev

server.port: 8080

spring.datasource.url: jdbc:postgresql://postgres:5432/inventory
