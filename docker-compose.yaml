services:
    postgres:
        image: postgres:14
        container_name: postgres
        mem_limit: 512m
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password1234
            - POSTGRES_DB=inventory
        healthcheck:
            test: [ "CMD", "pg_isready", "-U", "postgres" ]
            interval: 5s
            timeout: 2s
            retries: 60

    config-server:
        build: spring-cloud/config-server
        image: rufusy/elys-pos-config-server
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=dev,native
            - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
            - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
            - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
        volumes:
            -   $PWD/config-repo:/config-repo
        healthcheck:
            test: [ "CMD", "curl", "-fs", "http://localhost:8888/actuator/health" ]
            interval: 5s
            timeout: 2s
            retries: 60

    gateway:
        build: spring-cloud/gateway
        image: rufusy/ely-pos-gateway
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=dev
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
            - EUREKA_SERVER=${EUREKA_SERVER}
            - EUREKA_SERVER_USR=${EUREKA_SERVER_USR}
            - EUREKA_SERVER_PWD=${EUREKA_SERVER_PWD}
            - AUTH_SERVER_BASE=${AUTH_SERVER_BASE}
            - AUTH_SERVER_REALM=${AUTH_SERVER_REALM}
            - AUTH_SERVER_ISS=${AUTH_SERVER_ISS}
            - AUTH_SERVER_JWKS_URI=${AUTH_SERVER_JWKS_URI}
        ports:
            - "8086:8080"
        depends_on:
            config-server:
                condition: service_healthy

    eureka:
        build: spring-cloud/eureka-server
        image: rufusy/ely-pos-eureka-server
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=dev
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
            - EUREKA_SERVER_USR=${EUREKA_SERVER_USR}
            - EUREKA_SERVER_PWD=${EUREKA_SERVER_PWD}
        depends_on:
            config-server:
                condition: service_healthy

    inventory:
        build: microservices/inventory
        image: rufusy/ely-pos-inventory
        mem_limit: 512m
        environment:
            - SPRING_PROFILES_ACTIVE=dev
            - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
            - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
            - EUREKA_SERVER=${EUREKA_SERVER}
            - EUREKA_SERVER_USR=${EUREKA_SERVER_USR}
            - EUREKA_SERVER_PWD=${EUREKA_SERVER_PWD}
            - AUTH_SERVER_BASE=${AUTH_SERVER_BASE}
            - AUTH_SERVER_REALM=${AUTH_SERVER_REALM}
            - AUTH_SERVER_ISS=${AUTH_SERVER_ISS}
            - AUTH_SERVER_JWKS_URI=${AUTH_SERVER_JWKS_URI}
            - SWAGGER_AUTH_URL=${SWAGGER_AUTH_URL}
            - SWAGGER_TOKEN_URL=${SWAGGER_TOKEN_URL}
        depends_on:
            postgres:
                condition: service_healthy
            config-server:
                condition: service_healthy

    keycloak-db:
        image: postgres:15-alpine
        environment:
            POSTGRES_DB: keycloak
            POSTGRES_USER: keycloak
            POSTGRES_PASSWORD: keycloak
        volumes:
            - keycloak-postgres_data:/var/lib/postgresql/data

    keycloak:
        image: quay.io/keycloak/keycloak:22.0.0
        container_name: keycloak-dev
        environment:
            KC_DB: postgres
            KC_DB_URL_DATABASE: keycloak
            KC_DB_URL_HOST: keycloak-db
            KC_DB_URL_PORT: 5432
            KC_DB_USERNAME: keycloak
            KC_DB_PASSWORD: keycloak
            KEYCLOAK_ADMIN: admin
            KEYCLOAK_ADMIN_PASSWORD: admin
        command: start-dev
        ports:
            - "8087:8080"
        depends_on:
            - keycloak-db

volumes:
    keycloak-postgres_data: